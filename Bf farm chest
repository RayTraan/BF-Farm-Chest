-- Create a ScreenGui to hold the UI local screenGui = Instance.new("ScreenGui") screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui") -- Calculate the screen center local screenCenterX = 0.5 local screenCenterY = 0.05 -- Adjusted to move the button higher -- Create a TextButton for the toggle local toggleButton = Instance.new("TextButton") toggleButton.Text = "Toggle (P)" toggleButton.Size = UDim2.new(0, 100, 0, 30) toggleButton.Position = UDim2.new(screenCenterX - 0.05, -50, screenCenterY - 0.05, 0) -- Centered position toggleButton.Parent = screenGui local toggle = true local function toggleScript() toggle = not toggle if toggle then toggleButton.Text = "Enabled (P)" print("Script is now enabled") else toggleButton.Text = "Disabled (P)" print("Script is now disabled") end end toggleButton.MouseButton1Click:Connect(toggleScript) local function runScript() while true do if toggle then print("Script is running...") -- Place your script code here repeat task.wait() until game:IsLoaded() local PlaceID = game.PlaceId local AllIDs = {} local foundAnything = "" local actualHour = os.date("!*t").hour local Deleted = false local File = pcall(function() AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json")) end) if not File then table.insert(AllIDs, actualHour) writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs)) end function TPReturner() local Site; if foundAnything == "" then Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100')) else Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything)) end local ID = "" if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then foundAnything = Site.nextPageCursor end local num = 0; for i,v in pairs(Site.data) do local Possible = true ID = tostring(v.id) if tonumber(v.maxPlayers) > tonumber(v.playing) then for _,Existing in pairs(AllIDs) do if num ~= 0 then if ID == tostring(Existing) then Possible = false end else if tonumber(actualHour) ~= tonumber(Existing) then local delFile = pcall(function() delfile("NotSameServers.json") AllIDs = {} table.insert(AllIDs, actualHour) end) end end num = num + 1 end if Possible == true then table.insert(AllIDs, ID) wait() pcall(function() writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs)) wait() game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer) end) wait(4) end end end end function Teleport() while wait() do pcall(function() TPReturner() if foundAnything ~= "" then TPReturner() end end) end end local veryImportantWaitTime = 0.5 task.spawn(function() while task.wait(veryImportantWaitTime) do if toggle then -- Make sure to check the toggle here too pcall(function() for i,v in pairs(game.CoreGui:GetDescendants()) do pcall(function() if string.find(v.Name,"ErrorMessage") then if string.find(v.Text,"Security kick") then veryImportantWaitTime = 1e9 Teleport() end end end) end end) end end end) local AllowRunService = true local AllowRunServiceBind = Instance.new("BindableFunction") function AllowRunServiceBind.OnInvoke(args) if args == "Enable" then AllowRunService = true elseif args == "Disable" then AllowRunService = false end local CoreGui = game:GetService("StarterGui") CoreGui:SetCore("SendNotification", { Title = "Auto Chest", Text = "Subscribe To NeoWare", Duration = math.huge, Callback = AllowRunServiceBind, }) end local CoreGui = game:GetService("StarterGui") CoreGui:SetCore("SendNotification", { Title = "Auto Chest", Text = "working", Duration = math.huge, Callback = AllowRunServiceBind, }) task.spawn(function() while true do if AllowRunService == true and toggle then -- Check both conditions local hasChar = game.Players.LocalPlayer:FindFirstChild("Character") if not game.Players.LocalPlayer.Character then else local hasCrewTag = game.Players.LocalPlayer.Character:FindFirstChild("CrewBBG",true) if hasCrewTag then hasCrewTag:Destroy() end local hasHumanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") if hasHumanoid then local Chest = game.Workspace:FindFirstChild("Chest4") or game.Workspace:FindFirstChild("Chest3") or game.Workspace:FindFirstChild("Chest2") or game.Workspace:FindFirstChild("Chest1") or game.Workspace:FindFirstChild("Chest") if Chest then game.Players.LocalPlayer.Character:PivotTo(Chest:GetPivot()) firesignal(Chest.Touched,game.Players.LocalPlayer.Character.HumanoidRootPart) else Teleport() break end end end end task.wait() end end) end wait(1) end end -- Start running the script runScript()
